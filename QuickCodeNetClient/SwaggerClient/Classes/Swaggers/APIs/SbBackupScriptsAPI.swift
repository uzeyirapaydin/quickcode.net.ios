//
// SbBackupScriptsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SbBackupScriptsAPI {
    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsDelete(body: SbBackupScripts, completion: @escaping ((_ data: ResponseOfBoolean?,_ error: Error?) -> Void)) {
        sbBackupScriptsDeleteWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/SbBackupScripts/Delete
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : true
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<ResponseOfBoolean> 
     */
    open class func sbBackupScriptsDeleteWithRequestBuilder(body: SbBackupScripts) -> RequestBuilder<ResponseOfBoolean> {
        let path = "/api/SbBackupScripts/Delete"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResponseOfBoolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter backupId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsGetItem(backupId: Int? = nil, completion: @escaping ((_ data: ResponseOfSbBackupScripts?,_ error: Error?) -> Void)) {
        sbBackupScriptsGetItemWithRequestBuilder(backupId: backupId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SbBackupScripts/GetItem
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : ""
}}]
     - parameter backupId: (query)  (optional)

     - returns: RequestBuilder<ResponseOfSbBackupScripts> 
     */
    open class func sbBackupScriptsGetItemWithRequestBuilder(backupId: Int? = nil) -> RequestBuilder<ResponseOfSbBackupScripts> {
        let path = "/api/SbBackupScripts/GetItem"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "BackupId": backupId?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<ResponseOfSbBackupScripts>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsInsert(body: SbBackupScripts, completion: @escaping ((_ data: ResponseOfLong?,_ error: Error?) -> Void)) {
        sbBackupScriptsInsertWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/SbBackupScripts/Insert
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : 6
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<ResponseOfLong> 
     */
    open class func sbBackupScriptsInsertWithRequestBuilder(body: SbBackupScripts) -> RequestBuilder<ResponseOfLong> {
        let path = "/api/SbBackupScripts/Insert"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResponseOfLong>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsList(body: ListRequest, completion: @escaping ((_ data: ResponseOfListOfSbBackupScripts?,_ error: Error?) -> Void)) {
        sbBackupScriptsListWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/SbBackupScripts/List
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : [ {
    "truncateTableScript" : "",
    "viewScript" : "",
    "backupId" : 6,
    "schemaScript" : "",
    "userDefinedFunctionScript" : "",
    "backupUser" : "backupUser",
    "storedProcedureScript" : "",
    "backupDate" : "2000-01-23T04:56:07.000+00:00",
    "backupName" : "backupName",
    "configurationDataScript" : "",
    "tableScript" : ""
  }, {
    "truncateTableScript" : "",
    "viewScript" : "",
    "backupId" : 6,
    "schemaScript" : "",
    "userDefinedFunctionScript" : "",
    "backupUser" : "backupUser",
    "storedProcedureScript" : "",
    "backupDate" : "2000-01-23T04:56:07.000+00:00",
    "backupName" : "backupName",
    "configurationDataScript" : "",
    "tableScript" : ""
  } ]
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<ResponseOfListOfSbBackupScripts> 
     */
    open class func sbBackupScriptsListWithRequestBuilder(body: ListRequest) -> RequestBuilder<ResponseOfListOfSbBackupScripts> {
        let path = "/api/SbBackupScripts/List"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResponseOfListOfSbBackupScripts>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsTotalItemCount(completion: @escaping ((_ data: ResponseOfInteger?,_ error: Error?) -> Void)) {
        sbBackupScriptsTotalItemCountWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SbBackupScripts/TotalItemCount
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : 6
}}]

     - returns: RequestBuilder<ResponseOfInteger> 
     */
    open class func sbBackupScriptsTotalItemCountWithRequestBuilder() -> RequestBuilder<ResponseOfInteger> {
        let path = "/api/SbBackupScripts/TotalItemCount"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResponseOfInteger>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sbBackupScriptsUpdate(body: SbBackupScripts, completion: @escaping ((_ data: ResponseOfBoolean?,_ error: Error?) -> Void)) {
        sbBackupScriptsUpdateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/SbBackupScripts/Update
     - 

     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message",
  "value" : true
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<ResponseOfBoolean> 
     */
    open class func sbBackupScriptsUpdateWithRequestBuilder(body: SbBackupScripts) -> RequestBuilder<ResponseOfBoolean> {
        let path = "/api/SbBackupScripts/Update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResponseOfBoolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
